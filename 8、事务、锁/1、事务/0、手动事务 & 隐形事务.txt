======================================================== 手动事务 =================================================
手动事务的使用：
    START TRANSACTION;
    crud....;
    crud ....;
    .... //START TRANSACTION和COMMIT之间任何一步都可写 SAVE POINT p1 ，也可以不写， 其中p1自定义，;
    .... //START TRANSACTION和COMMIT之间任何一步都可写 ROLLBACK 来回滚整个事务，若写ROLLBACK TO p_name 则是回滚到SAVE POINT p1;
    crud ....;
    crud ....;
    COMMIT;

    注意：
todo    1、事务不支持嵌套，即不能在一个事务里又写一个事务，如果这么做，则外层事务会自动提交。
        2、执行「开始事务」命令，只是说创建了事务，并不意味着启动了事务。在 MySQL 有两种开启事务的命令，分别是：
            第一种：start transaction 命令；       //执行该命令后事务尚未真正启动。只有在执行事务内的首条crud语句时，事务才真正启动。
            第二种：start transaction with consistent snapshot 命令； //执行了该命令，就已经启动了事务。


======================================================== 隐形事务 ======================================================
隐形事务：
    不使用事务时，一条普通的 "增、改、删" 语句（select除外），在MySQL中其实默认是在一个隐形事务中被执行的，即隐形地在语句的前后加上
了START TRANSACTION 和 COMMIT ！！！
    MySQL中的变量AUTOCOMMIT控制隐形事务的开启与否。变量AUTOCOMMIT的默认值是 1 （也即ON），即默认是打开隐形事务的。若设置为0（也
即OFF）即关闭隐形事务，则一条insert、update、delete语句由于最终没有被COMMIT而不会在数据表中产生实际效果。
    隐形事务不会和开发者手动使用事务产生事务的嵌套这样的问题，因为用户在使用START TRANSACTION 来手动使用事务时，嵌套的隐形事务将自
动保持禁用状态；用户使用COMMIT或ROLLBACK结束事务后，隐形事务AUTOCOMMIT会自动恢复到之前的状态（之前的状态是1就还是1，即ON；之前的
状态是0就还是0，即OFF）。
    todo:除非嵌套在手动事务中，隐形事务和手动事务没有区别!!若不做特别说明，说事务的时候包含了手动事务和隐形事务！！
    todo:隐形事务和手动事务并发的时候，两种事务之间的地位是等同的，就像两个手动事务之间一样！


======================================================== 隐形事务的设置 =================================================
    查询隐形事务状态：
    SELECT @@AUTOCOMMIT;  //0表示是关闭状态，1表示是开启状态。
    设置隐形事务状态
    SET [SESSION | GLOBAL] AUTOCOMMIT = 0;   //设置关闭隐形事务，默认值是1，即默认是开启隐形事务。

    注意，上述修改会话系统变量或全局系统变量，只对当前有效，如果MySQL服务重启的话，这些设置就会丢失，如果要永久生效，就必须在配置文件中修
    改系统变量。
    [mysqld]
    autocommit=0


（完）
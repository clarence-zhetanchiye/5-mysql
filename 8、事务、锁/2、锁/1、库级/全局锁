对全局进行读操作时加的锁（是共享型锁）：
    flush tables with read lock；    //执行后，整个数据库就处于只读状态了，这时其他线程如果
                                    //对表数据进行 增删改 或表结构更改（alter table、drop table），都会被阻塞。
释放全局锁（若会话断开了，全局锁会被自动释放）：
    unlock tables；

全局锁用途：
    主要应用于不提供REPEATABLE READ事务隔离级别的引擎的全库数据备份，避免备份期间因为数据或表结构的更新，而出现备份到的数据不符合一致性。
    例如业务原本是a表扣减b表增加，如果不加全局锁即备份期间a增b减的业务仍在同时进行，结果出现a表扣减的情况备份了，b表还没相应增加b表已备份完成。

使用全局锁的缺点：
    加上全局锁进行数据备份期间，因为全局锁，导致业务只能读数据而不能更新数据，这样会造成业务停滞。
缺点的解决办法：
    如果存储引擎是InnoDB，即支持可重读的事务隔离级别，则在使用备份数据库的工具 mysqldump 时加上 –single-transaction 参数，备份数据库
    的过程就在一个事务中进行，从而既不影响业务对数据表进行实时操作，又保证了备份得到的数据是符合一致性的。
    但是，对于 MyISAM 这种不支持事务的引擎，在备份数据库时就要使用全局锁的方法。

（完）
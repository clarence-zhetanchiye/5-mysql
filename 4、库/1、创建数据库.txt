-- 创建库（也可通过Navicat软件右键MySQL连接来新建库）
    CREATE DATABASE [IF NOT EXISTS] '数据库名' CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_bin';

    说明：
    1、其中的CHARACTER是字符集，COLLATE是校对规则，也称排序规则，详见下面的解释。
       CHARACTER SET 'utf8mb4' 和 COLLATE 'utf8mb4_bin' 分别都可以不写，不写则表示使用当前版本MySQL默认的字符集和排序规则。
    2、其中'数据库名'最好采用小写字母（注意不能使用MySQL系统关键字），因为Windows系统下对MySQL的库名、表名的大小写不敏感，而Linux敏感。
    3、若未写 IF NOT EXISTS 而要创建的数据库在MySQL中已经存在，则会报错。


//注意这里的COLLATE utf8mb4_bin。
它是作用是： 对于mysql中那些字符串类型的列，如VARCHAR，CHAR，TEXT类型的列，都需要有一个COLLATE类
型来告知mysql如何对该列进行排序和比较。简而言之，COLLATE会影响到ORDER BY语句的顺序，会影响到WHERE条
件中大于小于号筛选出来的结果，会影响**DISTINCT**、**GROUP BY**、**HAVING**语句的查询结果。另外，mysql
建索引的时候，如果索引列是字符类型，也会影响索引创建，只不过这种影响我们感知不到。总之，凡是涉及到字符类型
比较或排序的地方，都会和COLLATE有关。
详见 https://www.cnblogs.com/qcloud1001/p/10033364.html

COLLATE通常是和数据编码（CHARSET）相关的，一般来说每种CHARSET都有多种它所支持的COLLATE，并且每种CHARSET都指定一种COLLATE为默认值。
例如GBK编码的默认COLLATE为gbk_chinese_ci，utf8mb4编码的默认值为utf8mb4_general_ci。
在mysql中使用show collation指令可以查看到mysql所支持的所有COLLATE

很多COLLATE都带有_ci字样，这是Case Insensitive的缩写，即大小写无关，也就是说"A"和"a"在排序和比较的时候是一视同仁的。selection * from table1 where field1="a"同
样可以把field1为"A"的值选出来。与此同时，对于那些_cs后缀的COLLATE，则是Case Sensitive，即大小写敏感的。

在国内比较常用的是utf8mb4_general_ci（默认）、utf8mb4_unicode_ci、utf8mb4_bin这三个
utf8mb4_bin的比较方法其实就是直接将所有字符看作二进制串，然后从最高位往最低位比对。所以很显然它是区分大小写的。
utf8mb4_unicode_ci和utf8mb4_general_ci对于中文和英文来说，其实是没有任何区别的
推荐使用utf8mb4_unicode_ci，对于已经用了utf8mb4_general_ci的系统，也没有必要花时间改造。


这里顺便讲个题外话，mysql中有utf8和utf8mb4两种编码，在mysql中请大家忘记utf8，永远使用utf8mb4。这是mysql的一个遗留问题，mysql中的utf8最多
只能支持3bytes长度的字符编码，对于一些需要占据4bytes的文字，mysql的utf8就不支持了，要使用utf8mb4才行。


（完）
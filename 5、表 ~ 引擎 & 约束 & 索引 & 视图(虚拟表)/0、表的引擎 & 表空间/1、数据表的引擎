存储引擎：数据表所采用的存储引擎，也即表类型。
         MySQL中创建表时，可指定该表使用何种存储引擎，也即指定该表的类型，不同的表类型，表会有不同的特性。
         MySQL中建表时，有多种存储引擎可供选择，常见的有 InnoDB、MyISAM、MEMORY 等。

SHOW ENGINES;                               查询当前版本MySQL支持的数据表存储引擎
SHOW VARIABLES LIKE 'storage_engine%';      查询当前版本MySQL默认使用的数据表存储引擎

若发现MySQL不支持InnoDB怎么办？
    如果发现"The InnoDB feature is disabled"，说明MySQL的InnoDB这种表类型没有被开启，用户需要找到MySQL的my.ini（Windows系统中
是这个，Linux系统则是my.conf）文件，找到skip_innodb选项，将其改为#skip_innodb。重启MySQL后就支持InnoDB类型的表了。



====================================数据表的几种存储引擎的介绍，主要围绕 速度、空间、事务、并发=================================

InnoDB引擎：-----------------------------------------------------------------------------------------------------------
--特性：
    0、使用InnoDB引擎创建的数据表x，表结构存储在x.frm文件（即磁盘）中，表数据存储在x.ibd表空间文件（即磁盘）中（MySQL5.6.6后默认一张表
       一个x.ibd文件），表空间在磁盘里由 段、区、页、行 逐级构成；
    1、支持自增
      1.1、支持自增的意思是：可将数据表中的某一列设置自增属性，向数据表中插入值时，若未给该自增列提供值、或提供的值是0或null，则该自增列
           最终保存的会是该列自增一个步长的值；若提供了值，且该值在该自增列中尚未出现，则会成功插入该值
      1.2、设定为自增的列不能有空值且值不能重复，并且设定为自增的列必须也设置为主键。
    2、支持外键
      2.1、支持外键的意思是：可将数据表中的某一列设置为外键，该外键列所在的表为从表，可以理解为奴隶表；外键列的值所根据或者说依赖的表为主
           表;主表中被从表的外键列依赖的列，必须是PRIMARY KEY 或 UNIQUE KEY的列；
--优点：
    1、支持事务；
    2、支持并发：特别适合处理密集地高并发更新数据的请求；
    3、自动修复崩溃。
--缺点：
    1、读写速度较慢；
    2、占用的数据空间较大；
--使用场景：
    1、对完整性要求高，需要用到事务；需要对crud数据的请求进行并发控制的业务。


MyISAM引擎：----------------------------------------------------------------------------------------------------------
--特性：
    0、使用MyISAM引擎创建的数据表x，表结构存储在x.frm中，表数据存储在x.MYD（MYData的缩写）中，表索引存储在x.MYI（MYIndex的缩写）中；
    0、InnoDB引擎中可用的数据类型，MyISAM引擎都可以用（字符串例外，MyISAM有自己的字符串类型），另外还有描述空间的类型如geometry、point、
       linestring、polygon。
    1、支持MyISAM静态：
        1.1、支持MyISAM静态的意思是：如果使用该MyISAM引擎创建的表，表中所有列的值长度是固定的，即若不使用xBLOB、xTEXT、VARCHAR这几
             种数据类型，则该表会自动使用MyISAM静态格式，也即会给该表中每列都分配最大的空间，而不论实际是否需要这么大的空间。此时该表
             的访问性能就非常高，但相应地是以牺牲空间为代价的。
    2、支持MyISAM动态：
        2.1、支持MyISAM动态的意思是：如果使用该MyISAM引擎创建的表，表中任何一列的值长度是不固定的，即是xBLOB、xTEXT、VARCHAR这几种
             之一的数据类型，则该表会自动使用MyISAM动态格式，即会动态给该表中每一列分配合适的空间。此时该表占据的磁盘空间是尽可能小的，
             但相应地是以产生碎片、牺牲该表的访问性能为代价的（因此建议经常使用OPTIMIZE TABLE语句来整理碎片）。
    3、支持MyISAM压缩：
        3.1、如果一个表中的数据只需要用于读，则可以使用MyISAMpack工具将这个表转换为MyISAM压缩表，不仅占据的空间小，而且读取性能高。
    4、支持空间检索：即这种类型的数据表中，数据类型为空间类型的列，可以创建SPATIAL空间索引。
--优点：
    1、处理速度快；
    2、占用空间小；
--缺点：
    1、不支持事务；
    2、不支持并发；
    3、崩溃修复过程长。
--使用场景：
    1、该引擎创建的数据表能提供“高速存储和全文检索能力”，因此特别适用于只插入和读取数据（更改和删除的操作越少越好）、不需要事务和并发控制
       的业务。


MEMORY引擎：------------------------------------------------------------------------------------------------------------
--特性：
    0、使用MEMORY引擎创建的数据表x，表结构存储在x.frm中，表数据存储在MySQL数据库服务器内存中；
    1、使用内存（MySQL数据库服务器的内存）中的内容来创建数据表，所有的数据也放在内存中；
    2、默认使用哈希索引（比BTREE即B树索引更快，可以在建表时设置为B树索引）
--优点：
    1、速度特别快；
--缺点：
    1、只能创建较小的数据表：创建的数据表的大小取决于参数max_rows（可在建表时指定）和max_heap_table_size（默认16MB，可按需扩大）
    2、安全性不高：数据存储在MySQL数据库服务器内存中，因此数据容易丢失（例如重启机器）；
    3、仅支持固定长度的数据类型：不支持VARCHAR、BLOB、TEXT数据类型，数据表中的每列只能设定为固定长度的数据类型；
--使用场景：
    1、适用于对速度要求高、对安全性要求不高、需要存储的数据量小的业务场景。


（完）

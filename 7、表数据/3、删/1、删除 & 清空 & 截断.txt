删除表中某些数据：
    DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM table_name [WHERE...条件] [ORDER BY...排序] [LIMIT...语句];

    说明：
    LOW_PRIORITY     //设置降低当前sql的执行优先级，待没有其他用户操作数据表时，才执行当前sql
    QUICK            //用于加快部分种类的删除操作的速度。
    IGNORE           //由于通过DELETE语句删除表中若干行数据时，若报错，则已经删除的部分也会回滚。该关键词表示即使报错也不回滚，且继续执行。
    WHERE...条件     //若不写，则是删除表中全部行的数据！！！ todo:注意这里!!!
    ORDER BY...排序  //指定数据表中被删除行的删除顺序，一般无需指定，因为没什么实际意义。
    LIMIT..语句      //表示只对 WHERE...条件 中筛选出来的若干行中的部分行数据进行删除。

    注意：执行了上述sql后，数据表（id是自增的情形）中被删除的那些行的id，不会在后续新增的数据中被再次自增时自动出现。


清空表数据（即删除表中所有数据，但自增的id并未回到初始值）：
    DELETE * FROM table_name;      //是清空表中所有数据，但id并不重新回到初始值。


-----------------------------------------------------------------------------------------------------------------------
截断表（即回到刚建完表的状态）：
    TRUNCATE TABLE table_name;     //table_name是数据表名，也可以指明某个库下的某个表，即写为 db_name.table_name


    注意：执行了上述sql后，数据表（id是自增的情形）中的自增id重新回到初始值（一般是1，具体根据建表时设定的自增的初始值）。

（完）